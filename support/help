#!/bin/bash

# ----------------------------------------------------------------------------------------
# GENERAL INFORMATION
# ----------------------------------------------------------------------------------------
#
# Written by Andrew J Freyer
# GNU General Public License
# http://github.com/andrewjfreyer/monitor
#
# HELP FILE AND GENERAL PREFERENCES
#
# ----------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------
# HELP TEXT
# ----------------------------------------------------------------------------------------

show_help_text() {
	echo "monitor.sh"
	echo ""
	echo "Andrew J Freyer, 2018"
	echo "GNU General Public License"
	echo ""
	echo "This is a shell script and helper scripts that passively monitor"
	echo "for specified bluetooth devices. By default, most BTLE devices"
	echo "repeatedly advertise their presence with a random mac address at a"
	echo "random interval. The randomness is to maintain privacy and to prevent"
	echo "device tracking by bad actors or advertisers. However, by knowing the "
	echo "static bluetooth mac address of a specified bluetooth device before hand,"
	echo "a random advertisement can be used as a trigger to affirmatively and "
	echo "securely scan for the presence of that known device. This construction"
	echo "enables the script to rapidly detect the arrival of a specified bluetooth"
	echo "device, while reducing the number of times an affirmative scan operation"
	echo "is required (which may interfere with 2.4GHz Wi-Fi)." 
	echo ""
	echo ""
	echo "usage:"
	echo "  monitor -h 		show usage information"
	echo "  monitor -v		print version number"
	echo "  monitor -d		restore to default settings"
	echo "  monitor -u		update 'monitor.service' to current command line settings"
	echo "				(excluding -u and -d flags)"
	echo "  monitor -r		repeatedly scan for arrival & departure of known devices"
	echo "  monitor -b		scan for & report BTLE beacon advertisements"
	echo "  monitor -a		report all scan results, not just presence changes"
	echo "  monitor -P		scan for & report public address advertisements"
	echo "  monitor -t		scan only on mqtt trigger messages:"
	echo "				[topic path]/scan/ARRIVE"
	echo "				[topic path]/scan/DEPART"
}

# ----------------------------------------------------------------------------------------
# PROCESS OPTIONS (technique: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash)
# ----------------------------------------------------------------------------------------

OPTIND=1

#PREFERENCES
PREF_PERIODIC_MODE=false
PREF_BEACON_MODE=false
PREF_TRIGGER_MODE=false
PREF_PUBLIC_MODE=false
PREF_REPORT_ALL_MODE=false
PREF_RESTORE_DEFAULTS=false
PREF_UPDATE_SERVICE=false

while getopts "h?vrbutPad" opt; do
    case "$opt" in
    h|\?)
        show_help_text
        exit 0
        ;;
    v)  
		echo "$VERSION"
		exit 0
		;;
    d)  PREF_RESTORE_DEFAULTS=true 	&& echo "> restoring default settings"
		;;
    r)  PREF_PERIODIC_MODE=true 	&& echo "> repeated scan mode enabled"
		;;
	u)  PREF_UPDATE_SERVICE=true 	&& echo "> updating monitor.service"
		;;
    b)  PREF_BEACON_MODE=true 		&& echo "> beacon scan mode enabled"
		;;
    P)  PREF_PUBLIC_MODE=true 		&& echo "> public node scan mode enabled"
		;;
	t)  PREF_TRIGGER_MODE=true 		&& echo "> trigger only mode enabled"
		;;
	a)  PREF_REPORT_ALL_MODE=true 	&& echo "> report all scan results mode enabled"
		;;
    esac
done

#RESET OPTION INDEX
shift $((OPTIND-1))

#SHIFT IF NECESSARY
[ "$1" = "--" ] && shift